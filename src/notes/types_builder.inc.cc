static std::vector<tptr> _impl_static_compiled_types;
static std::vector<tptr> _impl_static_compiled_functions;

bool initializeAllBuiltins() {
  auto* t0 = new TypeGroupDecl;
  t0->name = "UnaryDrawFunctor";
  auto* t1 = new TypeGroupDecl;
  t1->name = "TypeRef";
  auto* t2 = new TypeGroupDecl;
  t2->name = "metatype";
  auto* t3 = new BuiltinDecl;
  t3->name = "int";
  auto* t4 = new BuiltinDecl;
  t4->name = "size_t";
  auto* t5 = new BuiltinDecl;
  t5->name = "raw_fn_ptr<void*(void*)>";
  auto* t6 = new BuiltinDecl;
  t6->name = "raw_fn_ptr<void*()>";
  auto* t7 = new BuiltinDecl;
  t7->name = "raw_fn_ptr<void(any_ref)>";
  auto* t8 = new BuiltinDecl;
  t8->name = "raw_fn_ptr<size_t(void*)>";
  auto* t9 = new BuiltinDecl;
  t9->name = "raw_fn_ptr<void*(void*, size_t)>";
  auto* t10 = new BuiltinDecl;
  t10->name = "const std::type_info";
  auto* t11 = new BuiltinDecl;
  t11->name = "std::string";
  auto* t12 = new BuiltinDecl;
  t12->name = "Buffer";
  auto* t13 = new BuiltinDecl;
  t13->name = "gui::ColorRGB";
  auto* t14 = new BuiltinDecl;
  t14->name = "LayoutLineState";
  auto* t15 = new BuiltinDecl;
  t15->name = "CursorState";
  auto* t16 = new BuiltinDecl;
  t16->name = "tptr";
  auto* t17 = new Void;
  auto* t18 = new StructDecl;
  t18->name = "ConstStringDrawState";
  t18->group = t0;
    t18->vars.push_back({"value", t11});
  auto* t19 = new StructDecl;
  t19->name = "StructDecl_Var";
    t19->vars.push_back({"name", t11});
  auto* t20 = new PointerDecl;
  t20->pointee = t1;
    t19->vars.push_back({"type", t20});
  auto* t21 = new StructDecl;
  t21->name = "StructDecl";
  t21->group = t1;
    t21->vars.push_back({"name", t11});
    t21->vars.push_back({"group", t20});
  auto* t22 = new VectorSpecialization;
  t22->element = t19;
    t21->vars.push_back({"vars", t22});
  auto* t23 = new StructDecl;
  t23->name = "PointerDecl";
  t23->group = t1;
    t23->vars.push_back({"pointee", t20});
  auto* t24 = new StructDecl;
  t24->name = "ReferenceDecl";
  t24->group = t1;
    t24->vars.push_back({"wrapping", t20});
  auto* t25 = new StructDecl;
  t25->name = "Void";
  t25->group = t1;
  auto* t26 = new StructDecl;
  t26->name = "VectorSpecialization";
  t26->group = t1;
    t26->vars.push_back({"element", t20});
  auto* t27 = new StructDecl;
  t27->name = "TypeGroupDecl";
  t27->group = t1;
    t27->vars.push_back({"name", t11});
  auto* t28 = new StructDecl;
  t28->name = "BuiltinDecl";
  t28->group = t1;
    t28->vars.push_back({"name", t11});
  auto* t29 = new StructDecl;
  t29->name = "struct_metatype";
  t29->group = t2;
    t29->vars.push_back({"name", t11});
  auto* t30 = new PointerDecl;
  t30->pointee = t2;
    t29->vars.push_back({"group", t30});
    t29->vars.push_back({"kind", t3});
  auto* t31 = new VectorSpecialization;
  auto* t32 = new StructDecl;
  t32->name = "var_field_info";
  auto* t33 = new PointerDecl;
  t33->pointee = t29;
    t32->vars.push_back({"base", t33});
    t32->vars.push_back({"name", t11});
    t32->vars.push_back({"type", t30});
    t32->vars.push_back({"fetch_var", t5});
  t31->element = t32;
    t29->vars.push_back({"vars", t31});
    t29->vars.push_back({"allocate", t6});
  auto* t34 = new StructDecl;
  t34->name = "pointer_metatype";
  t34->group = t2;
    t34->vars.push_back({"pointee", t30});
  auto* t35 = new StructDecl;
  t35->name = "vector_metatype";
  t35->group = t2;
    t35->vars.push_back({"element", t30});
    t35->vars.push_back({"get_size", t8});
    t35->vars.push_back({"get_element", t9});
  auto* t36 = new BuiltinDecl;
  t36->name = "raw_fn_ptr<void(void*)>";
    t35->vars.push_back({"emplace_back", t36});
  auto* t37 = new StructDecl;
  t37->name = "type_group_metatype";
  t37->group = t2;
    t37->vars.push_back({"name", t11});
  auto* t38 = new VectorSpecialization;
  t38->element = t30;
    t37->vars.push_back({"children", t38});
    t37->vars.push_back({"get_kind", t8});
  auto* t39 = new BuiltinDecl;
  t39->name = "raw_fn_ptr<metatype*(size_t)>";
    t37->vars.push_back({"load_type", t39});
  auto* t40 = new StructDecl;
  t40->name = "builtin_metatype";
  t40->group = t2;
    t40->vars.push_back({"name", t11});
  auto* t41 = new PointerDecl;
  t41->pointee = t10;
    t40->vars.push_back({"typeinfo", t41});
  auto* t42 = new StructDecl;
  t42->name = "StringEditState";
  t42->group = t0;
  auto* t43 = new PointerDecl;
  t43->pointee = t32;
    t42->vars.push_back({"var", t43});
    t42->vars.push_back({"alt_text", t11});
  auto* t44 = new StructDecl;
  t44->name = "FunctionDeclArg";
    t44->vars.push_back({"name", t11});
    t44->vars.push_back({"type", t20});
  auto* t45 = new StructDecl;
  t45->name = "FunctionDecl";
    t45->vars.push_back({"name", t11});
    t45->vars.push_back({"result", t20});
  auto* t46 = new VectorSpecialization;
  t46->element = t44;
    t45->vars.push_back({"args", t46});
    t45->vars.push_back({"body", t12});
  auto* t47 = new StructDecl;
  t47->name = "SwitchFunctionDecl";
    t47->vars.push_back({"name", t11});
    t47->vars.push_back({"result", t20});
    t47->vars.push_back({"args", t46});
    t47->vars.push_back({"body", t12});
  auto* t48 = new StructDecl;
  t48->name = "TextButtonTypeSelect";
  t48->group = t0;
    t48->vars.push_back({"name", t11});
  auto* t49 = new StructDecl;
  t49->name = "MultiLineEditState";
  t49->group = t0;
    t49->vars.push_back({"read_buffer", t43});
  auto* t50 = new StructDecl;
  t50->name = "CommaForState";
  t50->group = t0;
    t50->vars.push_back({"var", t43});
  auto* t51 = new PointerDecl;
  t51->pointee = t0;
    t50->vars.push_back({"child", t51});
    t50->vars.push_back({"comma", t51});
  auto* t52 = new StructDecl;
  t52->name = "ForDrawState";
  t52->group = t0;
    t52->vars.push_back({"var", t43});
    t52->vars.push_back({"child", t51});
  auto* t53 = new StructDecl;
  t53->name = "TypeDeclToolEditState";
  t53->group = t0;
    t53->vars.push_back({"var", t43});
    t53->vars.push_back({"alt_text", t11});
  auto* t54 = new StructDecl;
  t54->name = "StringDrawState";
  t54->group = t0;
    t54->vars.push_back({"var", t43});
  auto* t55 = new StructDecl;
  t55->name = "DrawFunctorList";
  t55->group = t0;
  auto* t56 = new VectorSpecialization;
  t56->element = t51;
    t55->vars.push_back({"children", t56});
  auto* t57 = new StructDecl;
  t57->name = "DrawIfNotNullState";
  t57->group = t0;
    t57->vars.push_back({"child", t51});
  auto* t58 = new StructDecl;
  t58->name = "DrawIfIsAState";
  t58->group = t0;
    t58->vars.push_back({"type", t30});
    t58->vars.push_back({"child", t51});
  auto* t59 = new StructDecl;
  t59->name = "PointerBuilderState";
  t59->group = t0;
  auto* t60 = new StructDecl;
  t60->name = "VectorBuilderState";
  t60->group = t0;
  auto* t61 = new StructDecl;
  t61->name = "IndentChangeState";
  t61->group = t0;
    t61->vars.push_back({"child", t51});
    t61->vars.push_back({"indent", t4});
  auto* t62 = new StructDecl;
  t62->name = "ColorChangeState";
  t62->group = t0;
    t62->vars.push_back({"child", t51});
    t62->vars.push_back({"color", t13});
  auto* t63 = new StructDecl;
  t63->name = "NewLineDrawState";
  t63->group = t0;
  auto* t64 = new StructDecl;
  t64->name = "TextButton";
  t64->group = t0;
    t64->vars.push_back({"button_text", t11});
    t64->vars.push_back({"exec_fn", t7});
  auto* t65 = new StructDecl;
  t65->name = "NamedDrawFunctor";
  t65->group = t0;
    t65->vars.push_back({"name", t11});
    t65->vars.push_back({"child", t51});
  auto* t66 = new StructDecl;
  t66->name = "SwitchDrawFunctor";
  t66->group = t0;
    t66->vars.push_back({"table", t56});
    t66->vars.push_back({"other", t51});
  auto* t67 = new StructDecl;
  t67->name = "UnhandledTypeDrawFunctor";
  t67->group = t0;
  auto* f0 = new FunctionDecl;
  f0->name = "layout";
  f0->result = t17;
  auto* t68 = new ReferenceDecl;
  auto* t69 = new StructDecl;
  t69->name = "ConstStringDrawState";
  auto* t70 = new TypeGroupDecl;
  t70->name = "UnaryDrawFunctor";
  t69->group = t70;
  auto* t71 = new BuiltinDecl;
  t71->name = "std::string";
    t69->vars.push_back({"value", t71});
  t68->wrapping = t69;
  f0->args.push_back({"self", t68});
  auto* t72 = new BuiltinDecl;
  t72->name = "tptr";
  f0->args.push_back({"obj", t72});
  auto* t73 = new ReferenceDecl;
  auto* t74 = new BuiltinDecl;
  t74->name = "LayoutLineState";
  t73->wrapping = t74;
  f0->args.push_back({"state", t73});
  auto* t75 = new ReferenceDecl;
  auto* t76 = new BuiltinDecl;
  t76->name = "CursorState";
  t75->wrapping = t76;
  f0->args.push_back({"cstate", t75});
  f0->body = Buffer(R"fnbody(state.layout(self.value);
state.flush();
)fnbody");
  auto* f1 = new SwitchFunctionDecl;
  f1->name = "layout";
  f1->result = t17;
  auto* t77 = new ReferenceDecl;
  t77->wrapping = t70;
  f1->args.push_back({"self", t77});
  f1->args.push_back({"obj", t72});
  f1->args.push_back({"state", t73});
  f1->args.push_back({"cstate", t75});
  f1->body = Buffer(R"fnbody(
)fnbody");
  _impl_static_compiled_functions = std::vector<tptr>{f0, f1};
  _impl_static_compiled_types = std::vector<tptr>{t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t21, t23, t24, t25, t26, t27, t28, t29, t32, t34, t35, t37, t40, t42, t44, t45, t47, t48, t49, t50, t52, t53, t54, t55, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67};
  return true;
}
